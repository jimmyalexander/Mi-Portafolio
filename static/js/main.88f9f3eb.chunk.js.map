{"version":3,"sources":["components/Iconos.jsx","components/Footer.jsx","components/Navbar.jsx","containers/App.jsx","serviceWorker.js","index.js","assets/static/me.jpg"],"names":["IconButton","size","description","icon","title","props","className","path","Footer","name","mdiCardsHeart","Navbar","href","onClick","this","clickSun","data","cambio","mdiWhiteBalanceSunny","iconoSun","clickBurguer","active","mdiFormatLineWeight","iconoBurguer","React","Component","App","state","mdiWindowClose","mdiMoonWaxingCrescent","handleClicked","e","preventDefault","setState","document","body","classList","toggle","handleClick","id","enlace","src","logo","mdiTwitter","target","mdiGithub","mdiLinkedin","mdiReact","color","mdiLanguageJavascript","mdiLanguageCss3","mdiLanguageHtml5","mdiBootstrap","mdiSass","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.88f9f3eb.chunk.js","sourcesContent":["import React from 'react'\r\nimport Icon from '@mdi/react'\r\n\r\nconst IconButton = ({ size = 1,description, icon, title = 'test', ...props }) => {\r\n  return (\r\n    <div className='icon'>\r\n      <Icon size={size} path={icon} title={title}  description={description} {...props} />\r\n    </div>\r\n  )\r\n}\r\nexport default IconButton\r\n","import React from 'react'\r\nimport { mdiCardsHeart } from '@mdi/js' \r\nimport Icon from '../components/Iconos'\r\n\r\nconst Footer = () => <footer name='footer'>© 2020, Built with <Icon className='iconfooter'  icon={mdiCardsHeart} />\r\n    by Jimmy Castiblanco\r\n</footer>\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { mdiFormatLineWeight, mdiWindowClose, mdiWhiteBalanceSunny, mdiMoonWaxingCrescent} from '@mdi/js'\r\nimport Icon from './Iconos'\r\n\r\nclass Navbar extends React.Component{\r\n \r\n  \r\n  render(){\r\n    return(\r\n    <div className='container__navbar'>\r\n       <h2 className='container__icon'><a href='#'><span>Jimmy</span><strong>Alexander</strong></a></h2>\r\n       <div>\r\n        <Icon onClick={this.props.clickSun} className='sun' icon={this.props.data.cambio === false ? `${mdiWhiteBalanceSunny }` : `${this.props.data.iconoSun}`} />\r\n       </div>\r\n       <div > \r\n         <Icon onClick={this.props.clickBurguer} className={`burguer`}  icon={this.props.data.active === false ? `${mdiFormatLineWeight}` : `${this.props.data.iconoBurguer}`}  />\r\n       </div>\r\n      <ul  className={`navbar__list ${this.props.data.active ?'is-active':' '}`}>\r\n        <a href='#home'>Home</a>\r\n        <a href='#sobre-mi' >SobreMi</a>\r\n        <a href='#'>Certificados</a>\r\n        <a  href='#'>Proyectos</a>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n}\r\nexport default Navbar;","import React from 'react'\r\nimport { mdiTwitter, mdiGithub, mdiLinkedin, mdiReact, mdiLanguageJavascript, mdiLanguageCss3, mdiLanguageHtml5, mdiBootstrap, \r\n  mdiFormatLineWeight, mdiWindowClose, mdiWhiteBalanceSunny, mdiMoonWaxingCrescent, mdiSass } from '@mdi/js';\r\n\r\nimport Footer from '../components/Footer'\r\nimport Navbar from '../components/Navbar'\r\nimport logo from '../assets/static/me.jpg';\r\nimport Icon from '../components/Iconos';\r\n\r\nimport '../assets/styles/App.scss'\r\nclass App extends React.Component {\r\n  state = {\r\n    active: false,\r\n      cambio: false,\r\n      iconoBurguer: `${mdiWindowClose}`,\r\n      iconoSun: `${mdiMoonWaxingCrescent}`\r\n  }\r\n  handleClicked = (e) =>{\r\n    e.preventDefault();\r\n         this.setState({\r\n           cambio: !this.state.cambio\r\n         })\r\n        document.body.classList.toggle('light');\r\n  }\r\n  handleClick = (e) =>{\r\n    e.preventDefault();\r\n         this.setState({\r\n           active: !this.state.active\r\n         })\r\n  }\r\n  \r\n  render(){\r\n  return (\r\n    <div className='' id='home'>\r\n      <Navbar enlace={'sobre_mi'} clickSun={this.handleClicked}   clickBurguer={this.handleClick} data={this.state} />\r\n\r\n      <section className='main'>\r\n        <figure className='container__img'>\r\n          <img src={logo} />\r\n        </figure>\r\n        <div className='main__content'>\r\n        <div><strong>Hola,</strong>soy Jimmy Alexander</div>\r\n        <h1 className='title'>\r\n          Frontend Developer\r\n        </h1>\r\n\r\n        <ul className='list'>\r\n          <li className='list__item'>\r\n            <Icon icon={mdiTwitter}  />\r\n            <a target='blank'  href='https://twitter.com/jkastiblanco'>\r\n              Twitter\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <Icon  icon={mdiGithub} />\r\n            <a target='blank' href='https://github.com/jimmyalexander'>Github</a>\r\n          </li>\r\n          <li>\r\n            <Icon icon={mdiLinkedin}  />\r\n            <a target='blank' href='https://www.linkedin.com/in/jimmy-alexander-castiblanco-bustos-6a32191aa/'>Linkedin</a>\r\n          </li>\r\n        </ul>\r\n        </div>\r\n    </section>\r\n    \r\n    <section id='sobre-mi' className='sobre__mi' >\r\n      <h2>Sobre mi</h2>\r\n      <h3>Frontend Developer</h3>\r\n      <p className='description'>\r\n         Hola! Mi nombre es Jimmy Alexander Castiblanco, Colombiano emprendedor. Estudiante de Platzi actualmente ,\r\n         empece de lleno en le mundo de la programación en el año 2018, <br /> \r\n         <br />\r\n         Quiero llegar a ser uno de \r\n         los mejores desarrolladores frontend, me gusta jugar al futbol y los videojuegos,  amo la vida que tengo y mi\r\n         familia.          \r\n      </p>\r\n      <h3>Habilidades y Conocimientos:</h3>\r\n      <div className='container__habilidades'>\r\n        <Icon title='REACT' className='iconos' icon={mdiReact} color='cyan' />\r\n        <Icon title='JAVASCRIPT' className='iconos' icon={mdiLanguageJavascript} color='yellow' />\r\n        <Icon title='CSS3' className='iconos' icon={mdiLanguageCss3} color='#00BFFF' />\r\n        <Icon title='HMTL5' className='iconos' icon={mdiLanguageHtml5} color='red'/>\r\n        <Icon title='BOOTSTRAP' className='iconos' icon={mdiBootstrap } color='purple'/>\r\n        <Icon title='SASS' className='iconos' icon={mdiSass} color='#ff44dd'/>\r\n        <Icon title='GITHUB' className='iconos' icon={mdiGithub} />\r\n      </div>\r\n    </section>\r\n\r\n    <section className='proyectos'>\r\n\r\n    </section>\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/me.372eb60e.jpg\";"],"sourceRoot":""}